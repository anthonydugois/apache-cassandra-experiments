scenarios:
  default:
    schema: run driver=cqld4 tags==block:schema threads==1 cycles==UNDEF
    rampup: run driver=cqld4 tags==block:rampup threads=auto cycles===TEMPLATE(rampup-cycles,1000)
    main: run driver=cqld4 tags==block:main-read threads=auto cycles===TEMPLATE(main-cycles,1000)

bindings:
  fixed_size_key: Pad("0", TEMPLATE(keysize,16)); ToString() -> String
  fixed_size_value: CharBufImage("a-zA-Z0-9", 100000, TEMPLATE(valuesize,1024)); ToString() -> String
  zipf_key: ApproximatedZipf(TEMPLATE(keycount,1000), TEMPLATE(zipf,0.99)); Pad("0", TEMPLATE(keysize,16)); ToString() -> String

blocks:
  schema:
    params:
      timeout: 30.0
    ops:
      create-keyspace:
        simple: |
          CREATE KEYSPACE IF NOT EXISTS TEMPLATE(keyspace,baselines)
          WITH REPLICATION = {'class': 'SimpleStrategy', 'replication_factor': TEMPLATE(rf,1)}
          AND DURABLE_WRITES = true;
      create-table:
        simple: |
          CREATE TABLE IF NOT EXISTS TEMPLATE(keyspace,baselines).TEMPLATE(table,keyvalue) (
            key text,
            value text,
            PRIMARY KEY (key)
          );
  rampup:
    params:
      cl: LOCAL_ONE
      timeout: 10.0
    ops:
      rampup-insert:
        prepared: |
          INSERT INTO TEMPLATE(keyspace,baselines).TEMPLATE(table,keyvalue) (key, value)
          VALUES ({fixed_size_key}, {fixed_size_value});
  main-read:
    params:
      ratio: 1
      cl: LOCAL_ONE
      timeout: 10.0
    ops:
      main-select:
        prepared: |
          SELECT key, value FROM TEMPLATE(keyspace,baselines).TEMPLATE(table,keyvalue)
          WHERE key = {zipf_key};
